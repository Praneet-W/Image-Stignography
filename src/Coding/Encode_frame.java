/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Coding;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Prachi
 */
public class Encode_frame extends javax.swing.JFrame {

    BufferedImage sourceImage = null, EmbeddedImage =null;
    
    
  
    public Encode_frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabelSourceImage = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabelEmbedded = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextMessage = new javax.swing.JTextArea();
        jButtonReset = new javax.swing.JButton();
        jButtonOpen = new javax.swing.JButton();
        jButtonEmbed = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Message"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("SourceImage"));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelSourceImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelSourceImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("EmbeddedImage"));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelEmbedded, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabelEmbedded, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 146, -1, -1));

        jTextMessage.setColumns(20);
        jTextMessage.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jTextMessage.setRows(5);
        jScrollPane1.setViewportView(jTextMessage);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 15, 691, -1));

        jButtonReset.setText("Reset");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        jButtonOpen.setText("Open");
        jButtonOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenActionPerformed(evt);
            }
        });

        jButtonEmbed.setText("Embed");
        jButtonEmbed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmbedActionPerformed(evt);
            }
        });

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jButtonOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonEmbed, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(168, 168, 168)
                .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEmbed, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private File showFileDialog(final boolean open){
        JFileChooser fc =new JFileChooser("Open an Image");
        FileFilter filefilter = new FileFilter(){
            @Override
            public boolean accept(File file) {
               String name=file.getName().toLowerCase();
               if(open)
                   return file.isDirectory()|| name.endsWith(".jpg")|| name.endsWith(".jpeg")|| name.endsWith(".png")|| name.endsWith(".bmp");
                   return file.isDirectory()|| name.endsWith(".png")|| name.endsWith(".bmp");
               
            }
           
            @Override
            public String getDescription() {
                if(open)
                    
                  return "Image(*.jpg,*.png,*jpeg,*bmp)";
                return "Image(png,*bmp)";
            }
        };
            fc.setAcceptAllFileFilterUsed(false);
            fc.addChoosableFileFilter((javax.swing.filechooser.FileFilter) filefilter);
            
            File file=null;
            
            if(open && fc.showOpenDialog(this) ==fc.APPROVE_OPTION)
                file=fc.getSelectedFile();
            
            else if(!open && fc.showSaveDialog(this) == fc.APPROVE_OPTION)
     file=fc.getSelectedFile();
            return file;      
    }
    
    
    private void jButtonOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenActionPerformed
        File file= showFileDialog(true);
        
        if(file == null){
            return;
        }
        try {
            sourceImage = ImageIO.read(file);
            jLabelSourceImage.setIcon(new ImageIcon(sourceImage));
  this.validate();
        } catch (IOException ex) {
            
        }
        
        
    }//GEN-LAST:event_jButtonOpenActionPerformed

    private void jButtonEmbedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmbedActionPerformed
        
      if(jTextMessage.equals("")|| sourceImage==null){
          JOptionPane.showMessageDialog(this,"No message Embedded","No picture or Message Found",JOptionPane.ERROR_MESSAGE);
          return;
      }
        String Message=jTextMessage.getText();
        EmbeddedImage=sourceImage.getSubimage(0, 0,sourceImage.getWidth(), sourceImage.getHeight());
        
        emeddedMessage(EmbeddedImage, Message);
        
        jLabelEmbedded.setIcon(new ImageIcon(EmbeddedImage));
        this.validate();
        
    }//GEN-LAST:event_jButtonEmbedActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
jTextMessage.setText("");
sourceImage =null;
EmbeddedImage=null;
jLabelSourceImage.setIcon(null);
jLabelEmbedded.setIcon(null);

    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        if(EmbeddedImage==null){
            JOptionPane.showMessageDialog(this, "No message has embedded","Nothing to save"
            , JOptionPane.ERROR_MESSAGE );
        }
        else{
            File file=showFileDialog(false); //if value is true you will see open insted of save
            if(file==null)
            return;  //when input is null simply return
        String  name= file.getName();
        String Extention = name.substring(name.lastIndexOf(".")+1).toLowerCase();
        if(!Extention.equals("png") && !Extention.equals("bmp")){
            Extention ="png";
            file =new File(file.getAbsolutePath()+".png");
        
    }
        if(file.exists())   file.delete();
            try {
                ImageIO.write(EmbeddedImage, Extention.toUpperCase(), file);
            } catch (IOException ex) {
ex.printStackTrace();            }
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed
 private void emeddedMessage(BufferedImage img,String mess){
     int messageLength =mess.length();
     int imageWidth=img.getWidth(),imageHeight =img.getHeight(),
      imageSize =imageWidth *imageHeight;
     
     if(messageLength * 8 + 32 > imageSize){
          JOptionPane.showMessageDialog(this,"Message is  Too long For This Image","Message Too Long",JOptionPane.ERROR_MESSAGE);
     return;
     }
     else{
         embedInteger(img, messageLength,0,0);
       byte  b[]=mess.getBytes();
       for(int i=0;i<b.length;i++){
           embedByte(img,b[i],i*8+32,0);
       }
     }
 }
 private void embedInteger(BufferedImage img,int n,int start,int storageBit){
 
 int maxX= img.getWidth(),maxY=img.getHeight(),
         startX = start/maxX ,startY=start - startX*maxY,count= 0;
 
for(int i=startX;i<maxX && count <32;i++){
    for(int j =startY;j <maxY && count<32;j++){
        int rgb=img.getRGB(i, j), bit = getBitValue(n,count);
        rgb=setBitValue(rgb,storageBit,bit);
                img.setRGB(i,j,rgb);
                count++;
    }
} 
 }

private void embedByte (BufferedImage img,byte b,int start,int storageBit){
 int maxX= img.getWidth(),maxY=img.getHeight(),
         startX=start/maxY, startY=start - startX*maxY,count=0;
for(int i=startX;i< maxX && count <8;i++){
    for(int j =startY;j <maxY && count<8;j++){ 
        int rgb=img.getRGB(i, j), bit = getBitValue(b,count);
        rgb=setBitValue(rgb,storageBit,bit);
                img.setRGB(i,j,rgb);
                count++;
    }
}
 }
private int getBitValue(int n,int location){
    int V=  (int)( n & Math.round(Math.pow(2,location)));
      return V== 0?0:1;
 }
 private int setBitValue(int n,int location, int bit){
     int toggle=(int)Math.pow(2,location),bv=getBitValue(n, location);
     if(bv == bit)
         return n;
     if(bv == 0&& bit==1)
         n |=toggle;
         else if(bv ==1 &&bit==0)
                 n^=toggle;
                 
     return n;
 }
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Encode_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Encode_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Encode_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Encode_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Encode_frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEmbed;
    private javax.swing.JButton jButtonOpen;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabelEmbedded;
    private javax.swing.JLabel jLabelSourceImage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextMessage;
    // End of variables declaration//GEN-END:variables
}
