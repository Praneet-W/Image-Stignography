/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Coding;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Prachi
 */
public class Decryption extends javax.swing.JFrame {

    
    BufferedImage Image =null;
    /**
     * Creates new form Decryption
     */
    public Decryption() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelImage = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextMessage = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Image"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 837, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabelImage, javax.swing.GroupLayout.DEFAULT_SIZE, 827, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 229, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabelImage, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, -1, 250));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Decoded Message"));

        jTextMessage.setColumns(20);
        jTextMessage.setRows(5);
        jScrollPane1.setViewportView(jTextMessage);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 719, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 118, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, -1, -1));

        jButton1.setText("Open");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 10, -1, 41));

        jButton2.setText("Decode");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 10, -1, 41));

        jButtonReset.setText("Reset");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 10, -1, 41));

        pack();
    }// </editor-fold>//GEN-END:initComponents
private File showFileDialog(final boolean open){
        JFileChooser fc =new JFileChooser("Open an Image");
        FileFilter filefilter = new FileFilter(){
            @Override
            public boolean accept(File file) {
               String name=file.getName().toLowerCase();
               if(open)
                   return file.isDirectory()|| name.endsWith(".jpg")|| name.endsWith(".jpeg")|| name.endsWith(".png")|| name.endsWith(".bmp");
                   return file.isDirectory()|| name.endsWith(".png")|| name.endsWith(".bmp");
               
            }
           
            @Override
            public String getDescription() {
                if(open)
                    
                  return "Image(*.jpg,*.png,*jpeg,*bmp)";
                return "Image(png,*bmp)";
            }
        };
            fc.setAcceptAllFileFilterUsed(false);
            fc.addChoosableFileFilter((javax.swing.filechooser.FileFilter) filefilter);
            
            File file=null;
            
            if(open && fc.showOpenDialog(this) ==fc.APPROVE_OPTION)
                file=fc.getSelectedFile();
            
            else if(!open && fc.showSaveDialog(this) == fc.APPROVE_OPTION)
     file=fc.getSelectedFile();
            return file;      
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       File file= showFileDialog(true);
        
        if(file == null){
            return;
        }
        try {
            Image = ImageIO.read(file);
            jLabelImage.setIcon(new ImageIcon(Image));
  this.validate();
        } catch (IOException ex) {
            ex.printStackTrace();
            
        } // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(Image==null){
            JOptionPane.showMessageDialog(this,"First Open an Image" );
            return;
        }
        int len=extractInteger(Image,0,0);
        byte b[]= new byte[len];
        for(int i=0;i<len;i++){
            b[i]=extractByte(Image, i*8+32,0);
            jTextMessage.setText(new String(b));
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
Image=null;
jTextMessage.setText("");
jLabelImage.setIcon(null);
    }//GEN-LAST:event_jButtonResetActionPerformed
private int extractInteger(BufferedImage img,int start,int storageBit){
    int maxX =img.getWidth(), maxY=img.getHeight(),
            startX=start/maxY, startY= start- startX*maxY, count=0;
    int length=0;
    for(int i=startX;i<maxX && count<32;i++){
    for(int j=startY;i<maxY && count<32;j++){
    int rgb=img.getRGB(i, j),bit=getBitValue(rgb, storageBit);
    length=setBitValue(length,count,bit);
    count++;
        
    }
    
}
    return length;
}

private byte extractByte(BufferedImage img,int start,int storageBit){
     int maxX =img.getWidth(), maxY=img.getHeight(),
            startX=start/maxY, startY= start- startX*maxY, count=0;
     byte b=0;
     for(int i=startX;i<maxX && count<8;i++){
    for(int j=startY;i<maxY && count<8;j++){
    int rgb=img.getRGB(i, j),bit=getBitValue(rgb, storageBit);
    b=(byte)setBitValue(b,count,bit);
    count++;
        
    }   
}
     return b;
}
private int getBitValue(int n,int location){
    int V=  (int)( n & Math.round(Math.pow(2,location)));
      return V== 0?0:1;
 }
 private int setBitValue(int n,int location, int bit){
     int toggle=(int)Math.pow(2,location),bv=getBitValue(n, location);
     if(bv == bit)
         return n;
     if(bv == 0&& bit==1)
         n |=toggle;
         else if(bv ==1 &&bit==0)
                 n^=toggle;
                 
     return n;
 }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Decryption().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JLabel jLabelImage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextMessage;
    // End of variables declaration//GEN-END:variables
}
